import { ImportSpecifier } from 'es-module-lexer';
import { AutoImportOptions } from '@dcloudio/uni-cli-shared';
import type { SourceMapInput, PluginContext } from 'rollup';
import { Position } from '@vue/compiler-core';
export declare const UVUE_CLASS_NAME_PREFIX = "Gen";
export declare const DEFAULT_APPID = "HBuilder";
export declare const ENTRY_FILENAME = "main.uts";
export declare function wrapResolve(resolve: PluginContext['resolve']): PluginContext['resolve'];
export declare function createTryResolve(importer: string, resolve: PluginContext['resolve'], offsetStart?: Position, origCode?: string): (source: string, code: string, { ss, se }: ImportSpecifier) => Promise<void>;
export declare function parseImports(code: string, tryResolve?: ReturnType<typeof createTryResolve>): Promise<string>;
export declare function createResolveError(code: string, msg: string, start: Position, end: Position): import("rollup").RollupError;
export declare function kotlinOutDir(): string;
export declare function uvueOutDir(): string;
export declare function isVue(filename: string): boolean;
export declare function stringifyMap(obj: unknown, ts?: boolean): string;
export declare function parseUTSRelativeFilename(filename: string): string;
export declare function parseUTSImportFilename(filename: string): string;
type UniCloudSpace = {
    provider: string;
    spaceName: string;
    spaceId: string;
    clientSecret?: string;
    endpoint?: string;
    workspaceFolder?: string;
};
export declare function getUniCloudSpaceList(): Array<UniCloudSpace>;
type UniCloudObjectInfo = {
    name: string;
    methodList: string[];
};
export declare function getUniCloudObjectInfo(uniCloudSpaceList: Array<UniCloudSpace>): Array<UniCloudObjectInfo>;
export declare function addExtApiComponents(components: string[]): void;
export declare function getExtApiComponents(): Set<string>;
export declare function genClassName(fileName: string, prefix?: string): string;
export declare const initAutoImportOnce: typeof initAutoImport;
declare function initAutoImport(autoImportOptions?: AutoImportOptions): {
    transform(code: string, id: string): Promise<{
        code: string;
        map?: SourceMapInput | undefined;
    }>;
} | {
    transform(code: string, id: string): {
        code: string;
    };
};
export declare function getAutoImports(): Record<string, [[string, string]]>;
export declare function addAutoImports(source: string, imports: [string, string]): void;
export {};
